function Main.main 19
call splashScreen.draw 0
pop temp 0
label WHILE_EXP0
push local 16
not
not
if-goto WHILE_END0
push local 18
push constant 1
add
pop local 18
call Keyboard.keyPressed 0
pop local 17
push local 17
push constant 49
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 32
pop local 4
push constant 0
not
pop local 16
label IF_FALSE0
push local 17
push constant 50
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 24
pop local 4
push constant 0
not
pop local 16
label IF_FALSE1
push local 17
push constant 51
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 16
pop local 4
push constant 0
not
pop local 16
label IF_FALSE2
goto WHILE_EXP0
label WHILE_END0
push constant 256
push local 4
call Math.divide 2
push constant 2
sub
pop local 5
push constant 512
push local 4
call Math.divide 2
push constant 2
sub
pop local 6
push constant 1
pop local 7
push constant 2
pop local 8
push local 5
call Array.new 1
pop local 9
push local 7
pop local 2
label WHILE_EXP1
push local 2
push local 5
lt
not
if-goto WHILE_END1
push local 2
push local 9
add
push local 6
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push local 9
add
pop pointer 1
push that 0
pop local 10
push local 8
pop local 3
label WHILE_EXP2
push local 3
push local 6
lt
not
if-goto WHILE_END2
push local 3
push local 10
add
push local 2
push local 3
push local 4
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP2
label WHILE_END2
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 18
call PseudoRand.def 1
pop local 11
push local 5
push local 6
call Math.multiply 2
call Stack.new 1
pop local 12
push local 7
push local 8
push local 9
push local 5
push local 6
push local 7
push local 8
push local 11
push local 12
call Main.createPassage 9
pop local 0
push constant 10
call Sys.wait 1
pop temp 0
push local 7
push local 8
push local 9
push local 5
push local 6
call Main.showGrid 5
pop temp 0
label WHILE_EXP3
push local 0
push constant 0
eq
not
not
if-goto WHILE_END3
push local 0
call Cell.geti 1
push local 0
call Cell.getj 1
push local 9
push local 5
push local 6
push local 7
push local 8
push local 11
push local 12
call Main.createPassage 9
pop local 0
goto WHILE_EXP3
label WHILE_END3
push local 7
push local 8
push local 4
call Player.new 3
pop local 13
push local 7
push local 11
push local 5
push local 7
sub
push constant 1
sub
call PseudoRand.next 2
add
push local 9
add
pop pointer 1
push that 0
pop local 10
push local 8
push local 11
push local 6
push local 8
sub
push constant 1
sub
call PseudoRand.next 2
add
push local 10
add
pop pointer 1
push that 0
pop local 1
push local 7
push local 8
push local 9
push local 5
push local 6
call Main.showGrid 5
pop temp 0
push local 13
call Player.draw 1
pop temp 0
push local 1
call Cell.highlight 1
pop temp 0
push constant 0
pop local 15
label WHILE_EXP4
push local 15
not
not
if-goto WHILE_END4
call Keyboard.keyPressed 0
pop local 17
label WHILE_EXP5
push local 17
push constant 0
eq
push local 17
push constant 130
lt
or
push local 17
push constant 133
gt
or
not
if-goto WHILE_END5
call Keyboard.keyPressed 0
pop local 17
goto WHILE_EXP5
label WHILE_END5
push local 13
push local 17
push constant 130
sub
push local 9
push local 7
push local 8
push local 5
push local 6
call Player.move 7
pop temp 0
push local 13
call Player.draw 1
pop temp 0
push local 13
call Player.geti 1
push local 1
call Cell.geti 1
eq
push local 13
call Player.getj 1
push local 1
call Cell.getj 1
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 15
label IF_FALSE3
push constant 150
call Sys.wait 1
pop temp 0
goto WHILE_EXP4
label WHILE_END4
call Screen.clearScreen 0
pop temp 0
push constant 10
push constant 27
call Output.moveCursor 2
pop temp 0
push constant 8
call String.new 1
push constant 89
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 87
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 9
call Array.dispose 1
pop temp 0
push constant 2000
call Sys.wait 1
pop temp 0
call Main.main 0
pop temp 0
push constant 0
return
function Main.createPassage 12
push argument 0
push argument 2
add
pop pointer 1
push that 0
pop local 8
push argument 1
push local 8
add
pop pointer 1
push that 0
pop local 0
push local 0
call Cell.setVisited 1
pop temp 0
push constant 4
call Array.new 1
pop local 6
push constant 0
push local 6
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 6
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 6
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 6
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 1
sub
push argument 6
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 2
add
pop pointer 1
push that 0
pop local 8
push argument 1
push constant 1
sub
push local 8
add
pop pointer 1
push that 0
pop local 2
push local 2
call Cell.getVisited 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push local 6
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 9
push constant 1
add
pop local 9
label IF_FALSE1
label IF_FALSE0
push argument 0
push constant 1
sub
push argument 5
lt
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push constant 1
sub
push argument 2
add
pop pointer 1
push that 0
pop local 8
push argument 1
push local 8
add
pop pointer 1
push that 0
pop local 4
push local 4
call Cell.getVisited 1
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
push local 6
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 9
push constant 1
add
pop local 9
label IF_FALSE3
label IF_FALSE2
push argument 1
push constant 1
add
push argument 4
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push argument 2
add
pop pointer 1
push that 0
pop local 8
push argument 1
push constant 1
add
push local 8
add
pop pointer 1
push that 0
pop local 3
push local 3
call Cell.getVisited 1
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
push local 6
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 9
push constant 1
add
pop local 9
label IF_FALSE5
label IF_FALSE4
push argument 0
push constant 1
add
push argument 3
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 0
push constant 1
add
push argument 2
add
pop pointer 1
push that 0
pop local 8
push argument 1
push local 8
add
pop pointer 1
push that 0
pop local 5
push local 5
call Cell.getVisited 1
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 3
push local 6
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 9
push constant 1
add
pop local 9
label IF_FALSE7
label IF_FALSE6
push local 9
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 8
push local 0
call Stack.push 2
pop temp 0
push constant 0
not
pop local 11
label WHILE_EXP0
push local 11
not
if-goto WHILE_END0
push argument 7
push constant 3
call PseudoRand.next 2
pop local 10
push local 10
push local 6
add
pop pointer 1
push that 0
pop local 1
push local 1
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
pop local 11
label IF_FALSE9
goto WHILE_EXP0
label WHILE_END0
goto IF_END8
label IF_FALSE8
push argument 8
call Stack.getSize 1
push constant 0
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
return
label IF_FALSE10
push argument 8
call Stack.pop 1
pop local 1
label IF_END8
push local 0
push local 1
call Main.removeWall 2
pop temp 0
push local 1
return
function Main.removeWall 2
push argument 0
call Cell.geti 1
push argument 1
call Cell.geti 1
sub
pop local 0
push argument 0
call Cell.getj 1
push argument 1
call Cell.getj 1
sub
pop local 1
push local 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Cell.removeTopWall 1
pop temp 0
push argument 1
call Cell.removeBottomWall 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
call Cell.removeBottomWall 1
pop temp 0
push argument 1
call Cell.removeTopWall 1
pop temp 0
label IF_FALSE1
push local 1
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Cell.removeLeftWall 1
pop temp 0
push argument 1
call Cell.removeRightWall 1
pop temp 0
label IF_FALSE2
push local 1
push constant 1
neg
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
call Cell.removeRightWall 1
pop temp 0
push argument 1
call Cell.removeLeftWall 1
pop temp 0
label IF_FALSE3
push constant 0
return
function Main.showGrid 4
call Screen.clearScreen 0
pop temp 0
push argument 0
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push local 0
push argument 2
add
pop pointer 1
push that 0
pop local 2
push argument 1
pop local 1
label WHILE_EXP1
push local 1
push argument 4
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 3
call Cell.show 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
