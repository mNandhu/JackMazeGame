function Player.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 4
push argument 1
push this 4
call Math.multiply 2
push this 4
push constant 2
call Math.divide 2
add
pop this 2
push argument 0
push this 4
call Math.multiply 2
push this 4
push constant 2
call Math.divide 2
add
pop this 3
push pointer 0
return
function Player.draw 0
push argument 0
pop pointer 0
push this 2
push this 3
push this 4
push constant 4
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Player.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Player.draw 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Player.geti 0
push argument 0
pop pointer 0
push this 0
return
function Player.getj 0
push argument 0
pop pointer 0
push this 1
return
function Player.move 2
push argument 0
pop pointer 0
push argument 1
push constant 0
eq
push this 1
push constant 1
sub
push argument 4
lt
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push argument 2
add
pop pointer 1
push that 0
pop local 1
push this 1
push constant 1
sub
push local 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 1
call Cell.getWall 2
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Player.erase 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push this 2
push this 4
sub
pop this 2
label IF_FALSE1
label IF_FALSE0
push argument 1
push constant 2
eq
push this 1
push constant 1
add
push argument 6
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push argument 2
add
pop pointer 1
push that 0
pop local 1
push this 1
push constant 1
add
push local 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 0
call Cell.getWall 2
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Player.erase 1
pop temp 0
push this 1
push constant 1
add
pop this 1
push this 2
push this 4
add
pop this 2
label IF_FALSE3
label IF_FALSE2
push argument 1
push constant 1
eq
push this 0
push constant 1
sub
push argument 3
lt
not
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push constant 1
sub
push argument 2
add
pop pointer 1
push that 0
pop local 1
push this 1
push local 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 3
call Cell.getWall 2
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
call Player.erase 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push this 3
push this 4
sub
pop this 3
label IF_FALSE5
label IF_FALSE4
push argument 1
push constant 3
eq
push this 0
push constant 1
add
push argument 5
lt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push constant 1
add
push argument 2
add
pop pointer 1
push that 0
pop local 1
push this 1
push local 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 2
call Cell.getWall 2
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Player.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 3
push this 4
add
pop this 3
label IF_FALSE7
label IF_FALSE6
push constant 0
return
